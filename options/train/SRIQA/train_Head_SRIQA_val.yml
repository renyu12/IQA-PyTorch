# renyu: 回归头在LIVE Challenge数据集预提取特征上跑好的模型直接跑test.py脚本验证配置
#        跑验证得到预测标签配置相比原配置几处改动：
#            1. 移除训练集
#            2. 预训练模型为最佳训练好的模型，修改pretrained_model_path
#            3. save_score: true

# general settings
name: 001_Head_SRIQA_LIVEC
model_type: GeneralIQAModel
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 123
split_num: 10
save_final_results_path: './experiments/SRIQA_LIVEChallenge_10splits_results.txt'

# dataset and data loader settings
datasets:
  val:
    name: livechallenge
    type: GeneralNRFeatureDataset
    featureroot_target: ./datasets/LIVEC_FEATURE
    meta_info_file: ./datasets/meta_info/meta_info_LIVEChallengeDataset.csv
    split_file: ./datasets/meta_info/livechallenge_seed123.pkl
    split_index: 2 # which split to use, start from 1

# network structures
network:
  type: AVGMLPHead
  pretrained_model_path: ./good_models/001_Head_SRIQA_LIVEC_0.7510/models/net_best.pth
  #load_feature_weight_only: True
  #crop_num: 10
  repeat_crop: false
  conv_layer_num: 2
  pool_size: 7
  pool2_size: 256

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  optim:
    # renyu: just adam, don't two stage is OK
    type: Adam
    lr: !!float 1e-3
    weight_decay: !!float 5e-4

  optim_finetune:
    type: Adam
    lr: !!float 1e-5
    weight_decay: !!float 5e-4

  scheduler:
    type: MultiStepLR
    milestones: [1000]
    gamma: 1

  scheduler_finetune:
    type: MultiStepLR
    milestones: [1000]
    gamma: 1

  total_iter: 12000
  finetune_start_iter: 6000
  warmup_iter: -1  # no warm up

  # losses
  mos_loss_opt:
    type: MSELoss
    loss_weight: !!float 1.0
    reduction: mean

# validation settings
val:
  val_freq: !!float 100
  save_img: false
  pbar: true
  save_score: true

  key_metric: srcc # if this metric improve, update all metrics. If not specified, each best metric results will be updated separately
  metrics:
    srcc:
      type: calculate_srcc

    plcc:
      type: calculate_plcc

    krcc:
      type: calculate_krcc

# logging settings
logger:
  print_freq: 10
  save_checkpoint_freq: !!float 2e3  # renyu: still need to save states for resume
  save_latest_freq: !!float 5e2
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
